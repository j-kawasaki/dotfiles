# f2py3
# Autogenerated from man page /usr/share/man/man1/f2py3.1.gz
complete -c f2py3 -s h --description 'Write signatures of the fortran routines to file <filename> and exit.'
complete -c f2py3 -s m --description 'Name of the module; f2py generates a Python/C API file <modulename>module.'
complete -c f2py3 -l lower --description 'Do [not] lower the cases in <fortran files>.'
complete -c f2py3 -l build-dir --description 'All f2py generated files are created in <dirname>.  Default is tempfile.'
complete -c f2py3 -l overwrite-signature --description 'Overwrite existing signature file.'
complete -c f2py3 -l latex-doc --description 'Create (or not) <modulename>module. tex.   Default is --no-latex-doc.'
complete -c f2py3 -l short-latex --description 'Create \'incomplete\' LaTeX document (without commands \\\\documentclass, \\\\table…'
complete -c f2py3 -l rest-doc --description 'Create (or not) <modulename>module. rst.   Default is --no-rest-doc.'
complete -c f2py3 -l debug-capi --description 'Create C/API code that reports the state of the wrappers during runtime.'
complete -c f2py3 -o 'include\\\'<includefile>\\\'' --description 'Add CPP #include statement to the C/API code.'
complete -c f2py3 -l wrap-functions --description 'Create Fortran subroutine wrappers to Fortran 77 functions.'
complete -c f2py3 -l help-link --description 'List system resources found by system_info. py.  [.'
complete -c f2py3 -l quiet --description 'Run quietly.'
complete -c f2py3 -l verbose --description 'Run with extra verbosity.'
complete -c f2py3 -s v --description 'Print f2py version ID and exit.'
complete -c f2py3 -o 'include\'<includefile>\'' --description 'Add CPP #include statement to the C/API code.'
complete -c f2py3 -l include_paths --description 'Search include files (that f2py will scan) from the given directories.'
complete -c f2py3 -l help-compiler --description 'List available Fortran compilers [DEPRECIATED].'
complete -c f2py3 -l fcompiler --description 'Specify Fortran compiler type by vendor.'
complete -c f2py3 -l compiler --description 'Specify C compiler type (as defined by distutils).'
complete -c f2py3 -l fcompiler-exec --description 'Specify the path to F77 compiler [DEPRECIATED].'
complete -c f2py3 -l f90compiler-exec --description 'Specify the path to F90 compiler [DEPRECIATED].'
complete -c f2py3 -l help-fcompiler --description 'List available Fortran compilers and exit.'
complete -c f2py3 -l f77exec --description 'Specify the path to F77 compiler.'
complete -c f2py3 -l f90exec --description 'Specify the path to F90 compiler.'
complete -c f2py3 -l f77flags --description 'Specify F77 compiler flags.'
complete -c f2py3 -l f90flags --description 'Specify F90 compiler flags.'
complete -c f2py3 -l opt --description 'Specify optimization flags.'
complete -c f2py3 -l arch --description 'Specify architecture specific optimization flags.'
complete -c f2py3 -l noopt --description 'Compile without optimization.'
complete -c f2py3 -l noarch --description 'Compile without arch-dependent optimization.'
complete -c f2py3 -l debug --description 'Compile with debugging information.'
complete -c f2py3 -l 'link-<resource>' --description 'Link extension module with <resource> as defined by numpy_distutils/system_in…'
complete -c f2py3 -l link-lapack_opt --description '.'
complete -c f2py3 -o L/path/to/lib/ -o 'l<libname>' --description '.'
complete -c f2py3 -o 'D<define>' -o 'U<name>' -o I/path/to/include/ --description '.'
complete -c f2py3 -o DPREPEND_FORTRAN -o DNO_APPEND_FORTRAN -o DUPPERCASE_FORTRAN -o DUNDERSCORE_G77 --description 'Macros that might be required with non-gcc Fortran compilers.'
complete -c f2py3 -o DF2PY_REPORT_ATEXIT --description 'To print out a performance report of F2PY interface when python exits.'
complete -c f2py3 -o DF2PY_REPORT_ON_ARRAY_COPY --description 'To send a message to stderr whenever F2PY interface makes a copy of an array.'

